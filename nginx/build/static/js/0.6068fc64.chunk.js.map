{"version":3,"sources":["components/views/staff/achieves/achievesTable.js","components/views/user/userConfirmation/ConfirmationColumns.js","components/views/staff/StaffChangeAchievement.js","components/views/staff/achieves/achievesGroup.js","components/views/staff/achieves/achievesUserGroups.js"],"names":["AchievesTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","statusFormatter","cell","row","status","ball","charsFormatter","react_default","a","createElement","style","display","flex-wrap","max-width","chars","map","x","str","length","substr","className","newComments","commentsFormatter","onBlur","e","currentTarget","contains","relatedTarget","document","getElementById","_id","value","defaultValue","id","comment","onChange","target","height","marginRight","class","font-size","margin","backgroundColor","onClick","handleCommentChange","actionsFormatter","width","justifyContent","marginBottom","padding","type","data-toggle","data-target","edit","paddingLeft","decline","accept","columns","dataField","textAlign","verticalAlign","text","isDummyField","formatter","Fragment","achDate","d","Date","getDate","getMonth","getFullYear","fontSize","csvExport","rowClasses","rowIndex","bind","assertThisInitialized","_this2","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","Id","UserId","userId","then","resp","updater","catch","error","console","log","_this3","openModal","stopPropagation","fetchSendWithoutRes","preventDefault","filteredAchieves","filters","hideCheckedAchieves","data","filter","lib_default","keyField","Component","withRouter","types","link","doc","SZ","Type","Data","startsWith","overflow","Name","Appendix","Paragraph","textOverflow","maxWidth","href","additionalInfo","Size","toFixed","CrawlResult","title","toLowerCase","magazine","marginLeft","inRINC","isAuthor","year","merginTop","color","StaffChangeAchievement","user","users","find","Achievements","ach","toString","achId","achieve","confirmations","state","dateValidationResult","changeChars","achievement","isDateValid","updateDescr","handleDateChange","updateNewChars","updateChars","updateComment","saveChanges","setState","isValid","val","newChars","st","res","crit","indexOf","date","split","makeDate","i","push","result","closeModal","maxHeight","confirmsOpened","display: flex; justify-content","margin-bottom","margin-right","ConfirmationColumns","headerClasses","classes","bordered","margin-top","htmlFor","marginTop","name","placeholder","required","align-items","AchievementDateInput","paddingRight","criteriasForm","crits","staffContextStore","criterias","values","valuesCallback","supressDescription","AchievesGroup","toggleHide","toggleRating","toggleModal","modalIsOpen","choosedDirection","item","IsInRating","faculty","waitForAnswer","resolve","reject","setTimeout","Promise","direction","undefined","Direction","prevProps","prevState","snapshot","needHide","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","hidden","err","return","text-align","border","box-shadow","achievesTable","react_modal_lib_default","content","z-index","overlay","isOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","overlayClassName","flexDirection","directions","dir","AchievesUserGroups","modalAchId","Modal","setAppElement","openEditModal","closeEditModal","toggleCheckedAchieve","handleDirectionSelect","newUsers","currentDirection","isNewList","totalAchCount","checkedAchCount","filteredUsers","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","concat","key","achievesGroup","staff_StaffChangeAchievement","React","PureComponent"],"mappings":"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","file":"static/js/0.6068fc64.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../../../../style/user_main.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {withRouter} from \"react-router\";\nimport {fetchSendWithoutRes} from \"../../../../services/fetchService\";\n\nclass AchievesTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.accept = this.accept.bind(this);\n        this.decline = this.decline.bind(this);\n        this.edit = this.edit.bind(this);\n        this.handleCommentChange = this.handleCommentChange.bind(this)\n    };\n\n    statusFormatter = (cell, row) => (\n        row.status + (row.ball ? '('+row.ball+')': '')\n    )\n\n    charsFormatter = (cell, row) =>\n        (\n            <div style={{\"display\": \"flex\", 'flex-wrap': \"wrap\", \"max-width\": \"20rem\"}}>\n                {row.chars.map((x) => {\n                    let str = x;\n                    if (str.length > 35) {\n                        str = x.substr(0, 15) + '...' + x.substr(x.length - 15, 15)\n                    }\n                    return (<div className=\"charsItem\">{str}</div>)\n                })}\n            </div>\n        );\n\n    newComments = {};\n    commentsFormatter = (cell, row) =>\n        (\n            <div className=\"input-group commentContainer\" onBlur={(e) => {\n                if (!e.currentTarget.contains(e.relatedTarget))\n                    document.getElementById(row._id).value = document.getElementById(row._id).defaultValue\n            }}>\n            <textarea id={row._id} className={\"form-control\" + (row.comment ? \" commentSended\" : \"\")}\n    defaultValue={row.comment}\n    onChange={(e) => this.newComments[row._id] = e.target.value} style={{height: \"8.2rem\"}}/>\n                <div className=\"input-group-append\" style={{\"marginRight\": \"0px\"}}>\n                    <button class=\"btn btn-info\" style={{\"font-size\": \"x-small\", \"margin\": \"0px\", backgroundColor: \"#3d5c61\"}} onClick={(e) => {\n                        this.handleCommentChange(e, row._id)\n                    }}>Ок\n                    </button>\n                </div>\n            </div>\n        );\n\n    actionsFormatter = (cell, row) => (\n        <div style={{\"display\": \"block\"}}>\n            <div style={{\"width\": \"100%\", display: \"flex\", justifyContent: \"center\", marginBottom: \"1rem\", padding: \"0.1rem\"}}>\n                <button type=\"button\" className=\"custom_button centered_hor\" data-toggle=\"modal\"\n                        data-target=\"#exampleModal\" onClick={(e) => this.edit(e, row._id)}><i style={{paddingLeft: \"0.5rem\"}}\n                                                                                              className=\"fa fa-edit editText custom_icon_button\"/>\n                </button>\n            </div>\n            <div style={{\"width\": \"100%\", display: \"flex\", justifyContent: \"center\", marginBottom: \"1rem\"}}>\n                <button type=\"button\" className=\"custom_button centered_hor\"\n                        onClick={(e) => this.decline(e, row._id)}><i className=\"fa  fa-times redText custom_icon_button\"/>\n                </button>\n            </div>\n            <div style={{\"width\": \"100%\", display: \"flex\", justifyContent: \"center\"}}>\n                <button type=\"button\" className=\"custom_button centered_hor\"\n                        onClick={(e) => this.accept(e, row._id)}><i style={{paddingLeft: \"0.2rem\"}} className=\"fa fa-check greenText custom_icon_button\"/>\n                </button>\n            </div>\n        </div>\n    );\n\n    columns = [{\n        dataField: 'crit',\n        style: {width: \"5%\", textAlign: \"center\", verticalAlign: \"middle\"},\n        text: 'Крит.'\n    }, {\n        dataField: 'achievement',\n        text: 'Достижение',\n        style: {width: \"30%\", verticalAlign: \"middle\"},\n    }, {\n        dataField: 'chars',\n        isDummyField: true,\n        text: 'Хар-ки',\n        style: {verticalAlign: \"middle\", width: \"20%\"},\n        formatter: this.charsFormatter,\n    }, {\n        dataField: 'achDate',\n        text: 'Дата',\n        style: {width: \"5%\", textAlign: \"center\", verticalAlign: \"middle\"},\n        formatter: (cell, row) => (<>\n            {row.achDate && <>{getDate(row.achDate)}</>}\n        </>),\n    }, {\n        dataField: 'status',\n        style: {width: \"5%\", textAlign: \"center\", fontSize: \"small\", verticalAlign: \"middle\"},\n        text: 'Статус',\n        formatter: this.statusFormatter,\n    }, {\n        dataField: 'comments',\n        text: 'Комментарий',\n        isDummyField: true,\n        csvExport: false,\n        formatter: this.commentsFormatter,\n    }, {\n        dataField: 'actions',\n        text: '',\n        isDummyField: true,\n        style: { width: \"1rem\", backgroundColor: \"white\" },\n        csvExport: false,\n        formatter: this.actionsFormatter,\n    },\n    ];\n\n    rowClasses = (row, rowIndex) => {\n        if (row.status == 'Отказано')\n            return 'declined-row';\n        if (row.status == 'Изменено')\n            return 'edited-row';\n        if (row.status == 'Принято' || row.status == 'Принято с изменениями')\n            return 'accepted-row';\n        else return ''\n    };\n\n    accept(e, id) {\n        fetch(\"/api/AchSuccess\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({Id: id, UserId: this.props.userId})\n        }).then((resp) => {\n            if (resp.status === 200) {\n                this.props.updater()\n            }\n        })\n            .catch((error) => console.log(error))\n    }\n\n    decline(e, id) {\n        fetch(\"/api/AchFailed\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({Id: id, UserId: this.props.userId})\n        }).then((resp) => {\n            if (resp.status === 200) {\n                this.props.updater()\n            }\n        })\n            .catch((error) => console.log(error))\n    }\n\n\n    edit(e, id) {\n        this.props.openModal(id);\n        e.stopPropagation()\n    }\n\n    handleCommentChange(e, id) {\n        document.getElementById(id).defaultValue = this.newComments[id];\n        console.log(this.newComments[id]);\n        fetchSendWithoutRes('/api/comment', {Id: id, comment: this.newComments[id]}).then(\n            this.props.updater()\n        );\n        e.preventDefault()\n    }\n\n    render() {\n        let filteredAchieves\n        if (this.props.filters.hideCheckedAchieves)\n        {\n            filteredAchieves = this.props.data.filter(x => (x.status != 'Принято' && x.status != 'Принято с изменениями'))\n        }\n        else filteredAchieves = this.props.data\n        return (\n            <div className=\"adminAchievesTableContainer\">\n                <BootstrapTable keyField='_id' data={filteredAchieves} columns={this.columns}\n                                rowClasses={this.rowClasses}/>\n            </div>\n        )\n    }\n}\n\nfunction getDate(d) {\n    if (!d) return undefined;\n    d = new Date(d);\n    return (d.getDate() > 9 ? d.getDate() : '0' + d.getDate()) + \".\" + ((d.getMonth() + 1) > 9 ? (d.getMonth() + 1) : '0' + (d.getMonth() + 1)) + \".\" + d.getFullYear();\n}\n\nexport default withRouter(AchievesTable)","import React from \"react\";\n\nlet types = {'link': 'Ссылка', 'doc': 'Документ', 'SZ': 'Служ. записка'};\nlet columns = [{\n    dataField: 'Type',\n    text: 'Тип',\n    style: {width: \"10%\", fontSize: \"small\"},\n    formatter: (cell, row) => {\n        if (row.Type == 'link') {\n            if (row.Data.startsWith('https://elibrary.ru/item.asp?id=') || row.Data.startsWith('elibrary.ru/item.asp?id=')) {\n                return 'e-library'\n            }\n        }\n        return types[row.Type]\n    }\n}, {\n    dataField: 'Data',\n    text: 'Подтверждение',\n    style: {width: \"40%\", overflow:\"hidden\"},\n    formatter: (cell, row) => {\n        if (row.Type == 'SZ') {\n            return (<div style={{fontSize: \"small\"}}>{row.Name}\n                {row.SZ ? (row.SZ.Appendix ? ', прил. ' + row.SZ.Appendix : '') : ''}\n                {row.SZ ? (row.SZ.Paragraph ? ', п. ' + row.SZ.Paragraph : '') : ''}\n            </div>)\n        } else return (<div style={{overflow:\"hidden\", textOverflow: \"ellipsis\", maxWidth:\"18rem\", fontSize: \"small\"}}>\n            <a href={row.Data} onClick={(e) => e.stopPropagation()} target=\"_blank\">{row.Name}</a>\n            <br/>{row.additionalInfo}</div>)\n    }\n}, {\n    isDummyField: true,\n    formatter: (cell, row) => {\n        if (row.Type == 'doc')\n            return <span>{(row.Size / 1024 / 1024).toFixed(2)} Мб</span>;\n        if (row.Type == 'link') {\n            if (row.Data.startsWith('https://elibrary.ru/item.asp?id=') || row.Data.startsWith('elibrary.ru/item.asp?id=')) {\n                if (row.CrawlResult) {\n                    return (\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", fontSize: \"x-small\"}}>\n                            {row.CrawlResult.title ? <div style={{maxWidth: \"10rem\", fontSize: \"xx-small\"}}>\n                                <div>\"{row.CrawlResult.title.toLowerCase()}\"</div>\n                                <div><i>{row.CrawlResult.magazine ? row.CrawlResult.magazine.toLowerCase() : ''}</i>\n                                </div>\n                            </div> : ''}\n                            <div style={{width: \"100%\", marginLeft: \"0.5rem\"}}>\n                                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                                    {row.CrawlResult.inRINC ?\n                                        <div className=\"greenText\">В РИНЦе <i className=\"fa fa-check\"/></div> :\n                                        <div className=\"redText\">Не в РИНЦе<i className=\"fa fa-times\"/></div>}\n                                    {row.CrawlResult.isAuthor ?\n                                        <div className=\"greenText\">Указан в авторах <i className=\"fa fa-check\"/>\n                                        </div> :\n                                        <div className=\"redText\">Не указан в авторах<i className=\"fa fa-times\"/>\n                                        </div>}\n                                </div>\n                                {row.CrawlResult.year ? <div style={{fontSize: 'small', merginTop: '0.5rem'}}>\n                                    <b>Год: {row.CrawlResult.year}</b></div> : ''}\n                            </div>\n                        </div>\n\n\n                    )\n                } else return (<div style={{color: \"#505050\"}}>Нет информации из e-library</div>)\n            }\n        }\n        return ''\n    }\n}];\n\nexport {columns as ConfirmationColumns}","import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport AchievementDateInput from \"../../AchievementDateInput\";\nimport {fetchSendWithoutRes} from \"../../../stores/criteriasStore\";\nimport CriteriasForm from \"../user/userAddAchievement/criteriasForm\";\nimport staffContextStore from \"../../../stores/staff/staffContextStore\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport {ConfirmationColumns} from \"../user/userConfirmation/ConfirmationColumns\";\n\nclass StaffChangeAchievement extends Component {\n    constructor(props) {\n        super(props);\n        let user = this.props.users.find((x) => x.Achievements.find((ach) => ach._id.toString() == this.props.achId));\n        let achieve = user.Achievements.find((ach) => ach._id.toString() == this.props.achId);\n\n        console.log(achieve.confirmations)\n        this.state = {\n            user: user.user,\n            achId: achieve._id,\n            dateValidationResult: true,\n            changeChars: false,\n            chars: achieve.chars,\n            ach: achieve.achievement,\n            comment: achieve.comment,\n            achDate: achieve.achDate,\n            confirmations: achieve.confirmations,\n            isDateValid: true\n        };\n        console.log(achieve.confirmations)\n        this.updateDescr = this.updateDescr.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.updateNewChars = this.updateNewChars.bind(this);\n        this.updateChars = this.updateChars.bind(this);\n        this.updateComment = this.updateComment.bind(this);\n        this.saveChanges = this.saveChanges.bind(this)\n    };\n\n    updateDescr(e) {\n        this.setState({ach: e.target.value})\n    }\n\n    updateComment(e) {\n        this.setState({comment: e.target.value})\n    }\n\n    handleDateChange(isValid, val) {\n        this.setState({dateValidationResult: isValid, achDate: val, isDateValid: isValid})\n    }\n\n    updateNewChars(value) {\n        this.setState({newChars: value})\n    }\n\n    updateChars() {\n        if (this.state.newChars)\n            this.setState({chars: this.state.newChars, changeChars: false})\n    }\n\n    saveChanges() {\n\n        if (!this.state.isDateValid && this.state.chars[0] != '1 (7а)') {\n            let st = this.state;\n            st.dateValidationResult = false;\n            this.setState(st);\n            return\n        }\n        if (!this.state.ach && this.state.chars[0] != '1 (7а)') return;\n        let res = {};\n        res.crit = this.state.chars[0];\n\n        res.chars = this.state.chars;\n        if (this.state.achDate && this.state.achDate != '') {\n            if (this.state.achDate.indexOf('-') > 0 ) res.achDate = this.state.achDate\n            else res.achDate = makeDate(this.state.achDate);\n        }\n\n        res.achievement = this.state.ach;\n        res.comment = this.state.comment;\n\n        res.confirmations = [];\n        if (this.state.confirmations)\n            for (let i = 0; i < this.state.confirmations.length; i++) {\n                res.confirmations.push({id: this.state.confirmations[i]._id, additionalInfo: this.state.confirmations[i].additionalInfo})\n            }\n        res._id = this.props.achId;\n        fetchSendWithoutRes('/api/adm_update_achieve', res).then((result) => {\n            if (result) this.props.closeModal()\n        })\n    }\n\n    render() {\n        return (<div style={{display: \"flex\", maxHeight: \"42rem\"}}>\n                { !this.state.confirmsOpened &&\n            <div className=\"block\" style={{overflow: \"auto\", width: \"50rem\", maxHeight: \"100%\", maxWidth: \"30rem\"}}>\n                <div className=\"profile\" style={{\"display: flex; justify-content\": \"space-between\", \"margin\": \"0\"}}>\n                    <p className=\"headline\" style={{\"margin-bottom\": \"auto\", \"margin-right\": \"1rem\"}}>\n                        Подтверждения\n                    </p>\n                </div>\n                <div>\n                    <BootstrapTable keyField='_id' data={this.state.confirmations}\n                                    columns={ConfirmationColumns}\n                                    headerClasses={[\"hidden\"]} classes={[\"existingConfirmationsRow\"]}\n                                    bordered={false}/>\n                </div>\n            </div>}\n\n            <div className=\"block\" style={{maxWidth:\"30rem\", overflow: \"auto\"}}>\n                <div className=\"profile\" style={{\"display: flex; justify-content\": \"space-between\", \"margin\": \"0\"}}>\n                    <p className=\"headline\" style={{\"margin-bottom\": \"auto\", \"margin-right\": \"1rem\"}}>\n                        Изменение достижения\n                    </p>\n                    <div style={{'margin-top': 'auto'}}>\n                        <button id=\"DeleteButton\" className=\"btn btn-secondary\"\n                                value=\"Назад\" onClick={this.props.closeModal}>Закрыть\n                        </button>\n                    </div>\n                </div>\n\n                <hr className=\"hr_blue\"/>\n                <p className=\"desc_headline\">\n                    {this.state.user}\n                </p>\n                <label\n                    htmlFor=\"comment\" style={{\"marginTop\": \"auto\", \"marginRight\": \"0.5rem\"}}\n                    className=\"control-label col-xs-2\">Достижение: </label>\n                <textarea className=\"form-control area_text\" name=\"comment\"\n                          placeholder=\"Введите достижение (четкое, однозначное и полное описание)\" id=\"comment\"\n                          required onChange={this.updateDescr} value={this.state.ach}\n                          style={{width: \"100%\", margin: \"0\"}}/>\n\n                <div className=\"form-group\" style={{\"display\": \"flex\", \"marginTop\": \"1rem\"}}>\n                    <label\n                        htmlFor=\"Date\" style={{\"marginTop\": \"auto\", \"marginRight\": \"0.5rem\"}}\n                        className=\"control-label col-xs-2\">Дата достижения: </label>\n                    <div id=\"Date\" style={{\n                        \"display\": \"flex\",\n                        \"align-items\": \"center\",\n                        \"marginTop\": \"auto\",\n                        \"margin-bottom\": \"auto\"\n                    }}>\n                        <AchievementDateInput className=\"form-control\" isValid={this.state.dateValidationResult}\n                                              updater={this.handleDateChange}\n                                              defaultValue={getDate(this.state.achDate)}/>\n                    </div>\n                </div>\n\n                <div>\n                    <div style={{\"display: flex; justify-content\": \"space-between\"}}>\n                        <label\n                            style={{\"marginTop\": \"auto\", \"marginRight\": \"0.5rem\"}}\n                            className=\"control-label col-xs-2\">Характеристики: </label>\n                        <button id=\"DeleteButton\" className=\"btn btn-sm btn-outline-primary\"\n                                value=\"Назад\"\n                                onClick={() => this.setState({changeChars: !this.state.changeChars})}>Изменить\n                        </button>\n                    </div>\n                    <div style={{\"display\": \"flex\", 'flex-wrap': \"wrap\", 'max-width': '40rem'}}>\n                        {this.state.chars.map((x) => {\n                            let str = x;\n                            if (str.length > 35) {\n                                str = x.substr(0, 15) + '...' + x.substr(x.length - 15, 15)\n                            }\n                            return (<div className=\"charsItem\" style={{\n                                color: \"white\",\n                                backgroundColor: \"#151540\",\n                                paddingLeft: \"6px\",\n                                paddingRight: \"6px\"\n                            }}>{str}</div>)\n                        })}\n                    </div>\n\n                </div>\n\n\n                <button id=\"DeleteButton\" className=\"btn btn-warning\" style={{marginTop: \"3rem\"}}\n                        value=\"Назад\" onClick={this.saveChanges}>Сохранить\n                </button>\n\n            </div>\n                {this.state.changeChars &&\n                <div className=\"block\" style={{overflow: \"scroll\", width: \"50rem\", maxHeight: \"100%\", maxWidth: \"30rem\"}}>\n                    <div className=\"profile\" style={{\"display: flex; justify-content\": \"space-between\", \"margin\": \"0\"}}>\n                        <p className=\"headline\" style={{\"margin-bottom\": \"auto\", \"margin-right\": \"1rem\"}}>\n                            Изменение характеристик\n                        </p>\n                    </div>\n                    <div>\n                        <CriteriasForm crits={staffContextStore.criterias} values={this.state.chars}\n                                       valuesCallback={this.updateNewChars} supressDescription={true}/>\n                    </div>\n                    <button className=\"btn btn-success\" onClick={this.updateChars}>Сохранить характеристики</button>\n                </div>}\n            </div>\n        )\n    }\n}\n\nfunction getDate(d) {\n    if (!d) return undefined;\n    d = new Date(d);\n    return (d.getDate() > 9 ? d.getDate() : '0' + d.getDate()) + \".\" + ((d.getMonth() + 1) > 9 ? (d.getMonth() + 1) : '0' + (d.getMonth() + 1)) + \".\" + d.getFullYear();\n}\n\nfunction makeDate(d) {\n    if (!d) return undefined;\n    let date = d.split('.');\n    return new Date(date[2] + '-' + date[1] + '-' + date[0])\n}\n\n\nexport default StaffChangeAchievement","import React, {Component} from 'react';\nimport '../../../../style/admin.css';\nimport AchievesTable from \"./achievesTable\";\nimport StaffChangeAchievement from \"../StaffChangeAchievement\";\nimport Modal from \"react-modal\";\nimport staffContextStore from \"../../../../stores/staff/staffContextStore\";\n\nclass AchievesGroup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n        this.toggleHide = this.toggleHide.bind(this);\n        this.toggleRating = this.toggleRating.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    };\n\n    toggleModal() {\n        if (this.state.modalIsOpen)\n            this.setState({choosedDirection: false, modalIsOpen: !this.state.modalIsOpen})\n        else\n            this.setState({modalIsOpen: !this.state.modalIsOpen})\n    }\n\n    async toggleRating() {\n        let id = this.props.item.Id;\n        let direction\n        if (!this.props.item.IsInRating && staffContextStore.faculty == 'ВШЖиМК')\n        {\n            this.toggleModal();\n            const waitForAnswer = (resolve, reject) => {\n                if (this.state.choosedDirection)\n                    resolve(this.state.choosedDirection)\n                else if (this.state.choosedDirection === false)\n                {\n                    console.log('NULL')\n                    reject('null')\n                }\n                else\n                    setTimeout(() => waitForAnswer(resolve, reject), 30)\n            }\n            try {\n                direction = await new Promise(waitForAnswer)\n                this.setState({choosedDirection: undefined})\n            } catch (e) {\n                this.setState({choosedDirection: undefined})\n                return null\n            }\n        }\n\n        if (!this.props.item.IsInRating) {\n\n            fetch(\"/api/AddToRating\", {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: direction ? JSON.stringify({Id: id, Direction: direction}) : JSON.stringify({Id: id})\n            }).then((resp) => {\n                if (resp.status === 200) {\n                    this.props.updater()\n                }\n            })\n                .catch((error) => console.log(error))\n        } else {\n            fetch(\"/api/RemoveFromRating\", {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({Id: id})\n            }).then((resp) => {\n                if (resp.status === 200) {\n                    this.props.updater()\n                }\n            })\n                .catch((error) => console.log(error))\n\n        }\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.filters.hideCheckedAchieves)\n        {\n            let needHide = true\n            for (let ach of this.props.item.Achievements)\n            {\n                if (ach.status != 'Принято' && ach.status != 'Принято с изменениями') {\n                    needHide = false\n                    if (this.state.hidden !== false) {\n                        this.setState({hidden: false})\n                    }\n                    break\n                }\n            }\n            if (needHide && !this.state.hidden)\n            this.setState({hidden: true})\n        }\n        else\n            if (this.state.hidden) this.setState({hidden: false})\n    }\n\n    componentDidMount() {\n        this.setState({hidden: false})\n    }\n\n    toggleHide() {\n        let state = this.state;\n        state.hidden = !state.hidden;\n        this.setState(state)\n    }\n\n    render() {\n        if (this.state) console.log('STATE', this.props.item.user, this.state.hidden)\n        return (\n            <div>\n                {this.state &&\n                <div className=\"name\">\n                        <div style={{\"width\": \"100%\", \"text-align\": \"center\", \"height\": \"auto\",}}\n                             className=\"input-group headerContainer\">\n                        <div className={\"nameHeader\" + (this.props.item.IsInRating ? \" inRating\" : '')}\n                             style={{\"text-align\": \"center\"}}>\n                            <i className={\"fas fa-chevron-\" + (this.state.hidden ? \"right\" : \"down\") + \" mychevron\"}\n                               onClick={this.toggleHide}></i>\n                        </div>\n                        <h3 className={\"form-control nameHeader\" + (this.props.item.IsInRating ? \" inRating\" : '')}\n                            style={{\"border\": \"0\", \"box-shadow\": \"none\"}}>\n                            <a style={{\"color\": \"white\"}} target=\"_blank\" href=\"/\">{this.props.item.user}</a>\n                        </h3>\n                        <div className=\"input-group-append\">\n                            <button type=\"button\" className=\"btn btn-dark btn-xs newAchievesGroupButton\"\n                                    onClick={this.toggleRating}>\n                                {this.props.item.IsInRating ? \"Убрать из рейтинга\" : 'Добавить в рейтинг'}</button>\n                        </div>\n                    </div>\n                    {!this.state.hidden && <div className=\"block\">\n\n                        <AchievesTable data={this.props.item.Achievements} userId={this.props.item.Id} updater={this.props.updater}\n                                       openModal={this.props.openModal} filters={this.props.filters}/>\n                    </div>}\n                </div>}\n                <Modal className=\"Modal\" style={{content: {\"z-index\": \"111\"}, overlay: {\"z-index\": \"110\"}}}\n                       isOpen={this.state.modalIsOpen}\n                       onRequestClose={this.toggleModal}\n                       shouldCloseOnOverlayClick={true}\n                       contentLabel=\"Example Modal\"\n                       overlayClassName=\"Overlay\"\n                >\n                    {this.state.modalIsOpen &&\n                    <div style={{width: '400px', height: '250px', backgroundColor: 'white', padding: '15px'}}>\n                        <h2>Выберите направление:</h2>\n                        <p style={{marginBottom: '40px'}}>{this.props.item.user}</p>\n                        <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center'}}>\n                        {staffContextStore.directions.map((dir) =>\n                        <button className='btn btn-warning'\n                                style={{marginBottom: '15px'}}\n                            onClick={() => {\n                                this.setState({choosedDirection: dir, modalIsOpen: false})\n                            }}>\n                            {dir}\n                        </button>)}\n                        </div>\n                    </div>\n                    }\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AchievesGroup","import React, {Component} from 'react';\nimport '../../../../style/admin.css';\nimport AchievesGroup from \"./achievesGroup\";\nimport Modal from \"react-modal\";\nimport StaffChangeAchievement from \"../StaffChangeAchievement\";\nimport staffContextStore from \"../../../../stores/staff/staffContextStore\";\n\nclass AchievesUserGroups extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {modalIsOpen: false, modalAchId: ''};\n        Modal.setAppElement('#root');\n        this.openEditModal = this.openEditModal.bind(this);\n        this.closeEditModal = this.closeEditModal.bind(this)\n        this.toggleCheckedAchieve = this.toggleCheckedAchieve.bind(this)\n        this.handleDirectionSelect = this.handleDirectionSelect.bind(this)\n    };\n\n    openEditModal(achId) {\n        this.setState({modalIsOpen: true, modalAchId: achId})\n    }\n\n    closeEditModal(achId) {\n        this.setState({modalIsOpen: false, modalAchId: achId})\n    }\n\n    updateUsers(newUsers) {\n\n    }\n\n    toggleCheckedAchieve() {\n        this.setState({hideCheckedAchieves: !this.state.hideCheckedAchieves})\n    }\n\n    handleDirectionSelect(e) {\n        this.setState({currentDirection: e.target.value})\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!this.props.isNewList && staffContextStore.directions && staffContextStore.directions.length > 0)\n            if (!this.state.currentDirection)\n                this.setState({currentDirection: staffContextStore.directions[0]})\n    }\n\n    render() {\n        let totalAchCount = 0\n        let checkedAchCount = 0\n\n        let filteredUsers = this.props.users\n        if (staffContextStore.faculty == 'ВШЖиМК' && this.state.currentDirection) {\n            filteredUsers = filteredUsers.filter(x => x.Direction == this.state.currentDirection)\n        }\n\n        for (let user of filteredUsers) {\n            for (let ach of user.Achievements)\n            {\n                if (ach.status != 'Ожидает проверки' && ach.status != 'Изменено' )\n                    checkedAchCount += 1\n                totalAchCount += 1\n            }\n        }\n\n        return (\n            <main id=\"main\">{filteredUsers &&\n            <div id=\"panel\" className=\"col list\" style={{\"width\": \"100%\"}}>\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <h2 style={{fontSize: \"2rem\"}}>\n                        <b>Факультет: {staffContextStore.faculty}</b>\n                        <br/>\n                        <span style={{fontSize: \"1.5rem\"}}>Количество студентов: {filteredUsers.length}</span>\n                        {!this.props.isNewList && staffContextStore.directions && staffContextStore.directions.length > 0 && <select id='1'\n                                className=\"form-control selectors\"\n                                onChange={this.handleDirectionSelect}>\n                            {staffContextStore.directions.map(dir =>\n                                <option value={dir}>{dir}</option> )}\n                        </select>}\n                    </h2>\n                    <div>\n                        <p style={\n                            {\n                                fontSize: \"1.28rem\",\n                            marginBottom: \"0.8rem\",\n                            marginLeft: \"-1px\",\n                            marginTop: \"-0.1rem\"\n                            }\n                        }>Проверено достижений: {checkedAchCount}/{totalAchCount}</p>\n                    <button\n                        className={`btn btn-${this.state.hideCheckedAchieves ? 'success':'outline-info'}`}\n                        onClick={this.toggleCheckedAchieve} >{this.state.hideCheckedAchieves ? 'Показать ' : 'Скрыть '}\n                        проверенные достижения\n                    </button>\n                    </div>\n                </div>\n\n                {filteredUsers.map((item) => (\n                    <div key={item._id}>\n                    <AchievesGroup  item={item} updater={this.props.updater} openModal={this.openEditModal} filters={{hideCheckedAchieves: this.state.hideCheckedAchieves}}/>\n                    </div>\n                ))}\n            </div>}\n                <Modal className=\"Modal\" style={{content: {\"z-index\": \"111\"}, overlay: {\"z-index\": \"110\"}}}\n                       isOpen={this.state.modalIsOpen}\n                       onRequestClose={this.closeEditModal}\n                       shouldCloseOnOverlayClick={true}\n                       contentLabel=\"Example Modal\"\n                       overlayClassName=\"Overlay\"\n                >\n                    {this.state.modalIsOpen &&\n                    <StaffChangeAchievement users={filteredUsers} achId={this.state.modalAchId}\n                                            closeModal={() => {\n                                                this.setState({modalIsOpen: false, modalAchId: ''});\n                                                this.props.updater()\n                                            }}/>\n                    }\n                </Modal>\n            </main>\n        )\n    }\n}\n\nexport default AchievesUserGroups"],"sourceRoot":""}