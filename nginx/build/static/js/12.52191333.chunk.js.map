{"version":3,"sources":["components/views/staff/superAdmin/adminCreation.js","components/containers/staff/superAdmin/adminCreationContainer.js"],"names":["AdminCreation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","LastName","FirstName","Patronymic","id","Rights","Faculty","Role","isRightsValid","handleLastNameChange","e","st","target","value","setState","handleFirstNameChange","handlePatronymicChange","handleIdChange","handleFacultyChange","undefined","handleRightsSelect","push","preventDefault","handleRoleSelect","removeRight","right","indexOf","splice","validateRights","length","handleSubmit","newAdmin","toLowerCase","fetchSendObj","then","result","ok","history","catch","reason","console","log","_this2","react_default","a","createElement","className","style","justifyContent","display","onSubmit","htmlFor","type","name","required","onChange","defaultValue","color","facultiesList","map","fac","key","flexWrap","width","onClick","disabled","filter","x","marginTop","Component","withRouter","AdminCreationContainer","fetchGet","faculties","list","Fragment","adminCreation"],"mappings":"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","file":"static/js/12.52191333.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../../../../style/user_main.css';\nimport {withRouter} from \"react-router\";\nimport {fetchSendObj} from \"../../../../services/fetchService\";\n\nclass AdminCreation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            LastName: '',\n            FirstName: '',\n            Patronymic: '',\n            id: '',\n            Rights: [],\n            Faculty: '',\n            Role: 'Admin',\n            isRightsValid: true\n        };\n\n        this.handleLastNameChange = (e) => {\n            let st = this.state;\n            st.LastName = e.target.value;\n            this.setState(st)\n        };\n\n        this.handleFirstNameChange = (e) => {\n            let st = this.state;\n            st.FirstName = e.target.value;\n            this.setState(st)\n        };\n\n        this.handlePatronymicChange = (e) => {\n            let st = this.state;\n            st.Patronymic = e.target.value;\n            this.setState(st)\n        };\n\n        this.handleIdChange = (e) => {\n            let st = this.state;\n            st.id = e.target.value;\n            this.setState(st)\n        };\n\n        this.handleFacultyChange = (e) => {\n            let st = this.state;\n            if (e.target.value === \"\") st.Faculty = undefined;\n            else st.Faculty = e.target.value;\n            this.setState(st)\n        };\n\n        this.handleRightsSelect = (e) => {\n            let st = this.state;\n            st.Rights.push(e.target.value);\n            st.isRightsValid = true;\n            this.setState(st);\n            e.preventDefault()\n        };\n\n        this.handleRoleSelect = (e) => {\n            let st = this.state;\n            st.Role = e.target.value;\n            this.setState(st);\n            e.preventDefault()\n        };\n\n        this.removeRight = (right) => {\n            let st = this.state;\n            let index = st.Rights.indexOf(right);\n            if (index != -1)\n                st.Rights.splice(st.Rights.indexOf(right), 1);\n            this.setState(st)\n        };\n\n\n        this.validateRights = (e) => {\n            if (this.state.Rights.length === 0) {\n                let st = this.state;\n                st.isRightsValid = false;\n                this.setState(st)\n            }\n        };\n\n        this.handleSubmit = (e) => {\n            e.preventDefault();\n            if (this.state.isRightsValid) {\n\n                let newAdmin = {\n                    LastName: this.state.LastName,\n                    FirstName: this.state.FirstName,\n                    Patronymic: this.state.Patronymic,\n                    Faculty: this.state.Faculty,\n                    Rights: this.state.Rights,\n                    Role: this.state.Role,\n                    id: this.state.id.toLowerCase()\n                };\n\n                fetchSendObj('/api/createAdmin', newAdmin).then((result) => {\n                    if (result.ok) this.props.history.push('/staff/');\n                }).catch((reason) => console.log('ERROR', reason))\n            }\n\n        }\n\n\n    };\n\n\n    render() {\n        return (\n            <main>\n                <div id=\"panel\" className=\"row\" style={{\"justifyContent\": \"center\", \"display\": \"flex\"}}>\n\n                    <div className=\"menu\">\n                        <p className=\"headline\">\n                            Создание нового администратора\n                        </p>\n                        <hr className=\"hr_blue\"/>\n                        <div className=\"container\">\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"nameInput\"><span className=\"redText\">*</span>Фамилия:</label>\n                                    <input id=\"nameInput\" className=\"form-control\" type=\"text\" name=\"name\" required\n                                           value={this.state.LastName} onChange={this.handleLastNameChange}/>\n\n                                    <label htmlFor=\"officialNameInput\"><span className=\"redText\">*</span>Имя:</label>\n                                    <input id=\"officialNameInput\" className=\"form-control\" type=\"text\" required\n                                           name=\"officialName\" value={this.state.FirstName}\n                                           onChange={this.handleFirstNameChange}/>\n\n                                    <label htmlFor=\"dirNameInput\">Отчество:</label>\n                                    <input id=\"dirNameInput\" className=\"form-control\" type=\"text\" name=\"dirName\"\n                                           value={this.state.Patronymic} onChange={this.handlePatronymicChange}/>\n\n                                    <label htmlFor=\"IdInput\"><span className=\"redText\">*</span>Идентификатор:</label>\n                                    <input id=\"IdInput\" className=\"form-control\" type=\"text\" name=\"dirName\" required\n                                           value={this.state.id} onChange={this.handleIdChange}/>\n\n                                    <label htmlFor=\"FacultyInput\">Факультет:</label>\n                                    <select id='FacultyInput' className=\"form-control\" name=\"check2\"\n                                            defaultValue={\"\"} onChange={this.handleFacultyChange}>\n                                        <option value=\"\" style={{\"color\": \"red\"}}>-</option>\n                                        {this.props.facultiesList.map((fac) => {\n                                            return <option key={fac} value={fac}>{fac}</option>\n                                        })}\n                                    </select>\n\n                                    <label htmlFor=\"RoleInput\">Роль:</label>\n                                    <select id='RoleInput' className=\"form-control\" name=\"check2\"\n                                            defaultValue={\"Admin\"} onChange={this.handleRoleSelect}>\n                                        <option value=\"Admin\">Администратор</option>\n                                        <option value=\"SuperAdmin\">СуперАдминистратор</option>\n                                    </select>\n\n                                    <label htmlFor=\"RightsInput\"><span className=\"redText\">*</span>Права:</label>\n                                    <div id=\"RightsInput\">\n                                        <div style={{\"display\": \"flex\", \"flexWrap\": 'wrap', \"width\": \"20rem\"}}>\n                                            {this.state.Rights.map((right) => {\n                                                return <div className=\"btn-xs btn-dark tag\"\n                                                            onClick={(e) => this.removeRight(right)}>{right}</div>\n                                            })}\n                                        </div>\n                                        <select id='RightsSelect'\n                                                className={\"form-control\" + (this.state.isRightsValid ? \"\" : \" is-invalid\")}\n                                                name=\"check2\"\n                                                defaultValue={\"\"} value=\"\" onChange={this.handleRightsSelect}>\n                                            <option value=\"\" disabled>Выберите факультет</option>\n                                            {this.props.facultiesList.filter((x) => (this.state.Rights.indexOf(x) == -1)).map((fac) => {\n                                                return <option key={fac + 'r'} value={fac}>{fac}</option>\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"end\"}}>\n                                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Создать\"\n                                               style={{\"marginTop\": \"1rem\"}} onClick={this.validateRights}/>\n                                    </div>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default withRouter(AdminCreation)","import React, {Component} from 'react';\nimport AdminCreation from \"../../../views/staff/superAdmin/adminCreation\";\nimport {fetchGet} from \"../../../../services/fetchService\";\n\nclass AdminCreationContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    };\n\n    componentWillMount() {\n        fetchGet('/api/getFacultiesList', {}).then((result) =>\n            this.setState({faculties: result.list}))\n    }\n\n\n    render() {\n        return (<>\n                {\n                    this.state.faculties &&\n                    <AdminCreation facultiesList={this.state.faculties}/>\n                }\n                {\n                    !this.state.faculties &&\n                    <div></div>\n                }\n            </>\n        )\n    }\n}\n\nexport default AdminCreationContainer"],"sourceRoot":""}