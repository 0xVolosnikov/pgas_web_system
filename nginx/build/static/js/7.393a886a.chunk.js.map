{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/views/user/userRegistrationPage.js","components/containers/user/UserRegistrationContainer.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","UserRegistrationPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","reqFields","state","isDateValid","Type","handleChange","e","field","st","target","value","setState","checkValidity","x","isValid","register","preventDefault","valid","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","fieldValid","err","return","user","lastname","LastName","name","Name","patronymic","Patronymic","spbuId","SpbuId","birthdate","date","split","Date","makeDate","Birthdate","faculty","Faculty","type","course","Course","AccessAllowed","settings","fetchSendWithoutRes","then","result","history","push","handleDateChange","BirthdateInvalid","_this2","allowAccessPopover","react_default","a","createElement","Popover","id","style","width","Title","as","Content","fontSize","color","className","src","logo","margin","lock","onChange","required","autocomplete","DateInput","updater","margin-top","autoComplete","placeholder","defaultValue","cursor","disabled","faculties","map","fac","selected","toConsumableArray","keys","OverlayTrigger","trigger","placement","overlay","htmlFor","onClick","class","Component","withRouter","UserRegistrationContainer","console","log","fetchGet","facultiesList","list","Fragment","userRegistrationPage"],"mappings":"0FAGe,SAAAA,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GFGmCQ,CAAef,IGJnC,WACf,UAAAgB,UAAA,mDHG2DC,GAJ3DC,EAAAC,EAAAC,EAAA,sBAAArB,mOIUMsB,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAJ,IACfE,EAAAb,OAAAgB,EAAA,EAAAhB,CAAAe,KAAAf,OAAAiB,EAAA,EAAAjB,CAAAW,GAAAR,KAAAY,KAAMH,KAFVM,UAAY,CAAC,WAAY,OAAQ,SAAU,YAAa,UAAW,OAAQ,UAGvEL,EAAKM,MAAQ,CAACC,aAAa,EAAOC,KAAM,sEAExCR,EAAKS,aAAe,SAACC,EAAGC,GACpB,IAAIC,EAAKZ,EAAKM,MACdM,EAAGD,GAASD,EAAEG,OAAOC,MACrBF,EAAGD,EAAQ,YAAa,EACxBX,EAAKe,SAASH,IAGlBZ,EAAKgB,cAAgB,SAACC,GAClB,QAAKjB,EAAKM,MAAMW,IAMpBjB,EAAKkB,QAAU,SAACD,GACZ,OAAKjB,EAAKM,MAAMW,EAAI,WACR,cAD2B,IAI3CjB,EAAKmB,SAAW,SAACT,GACbA,EAAEU,iBAEF,IAAIC,GAAQ,EACRT,EAAK,GAJUU,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMnB,QAAAC,EAAAC,EAAkB3B,EAAKK,UAAvBpB,OAAAC,cAAAoC,GAAAI,EAAAC,EAAAC,QAAAC,MAAAP,GAAA,EAAkC,KAAzBX,EAAyBe,EAAAZ,MAC1BgB,EAAa9B,EAAKgB,cAAcL,GACpCC,EAAGD,EAAQ,YAAcmB,EACzBT,EAAQA,GAASS,GATF,MAAAC,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAK,EAAAK,QAAAL,EAAAK,SAAA,WAAAT,EAAA,MAAAC,GAYnB,GADAxB,EAAKe,SAASH,GACTS,EAAL,CAEA,IAAIY,EAAO,GACXA,EAAKC,SAAWlC,EAAKM,MAAM6B,SAC3BF,EAAKG,KAAOpC,EAAKM,MAAM+B,KACvBJ,EAAKK,WAAatC,EAAKM,MAAMiC,WAC7BN,EAAKO,OAASxC,EAAKM,MAAMmC,OACzBR,EAAKS,UAmKjB,SAAkB9C,GACd,IAAKA,EAAG,OACR,IAAI+C,EAAO/C,EAAEgD,MAAM,KACnB,OAAO,IAAIC,KAAKF,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,IAtK5BG,CAAS9C,EAAKM,MAAMyC,WACrCd,EAAKe,QAAUhD,EAAKM,MAAM2C,QAC1BhB,EAAKiB,KAAOlD,EAAKM,MAAME,KACvByB,EAAKkB,OAASnD,EAAKM,MAAM8C,OAErBpD,EAAKM,MAAM+C,gBACXpB,EAAKqB,SAAW,CAACD,eAAe,IAEpCE,YAAoB,oBAAqBtB,GAAMuB,KAAK,SAACC,GAC7CA,GAAQzD,EAAKD,MAAM2D,QAAQC,KAAK,SAK5C3D,EAAK4D,iBAAmB,SAAC9C,GACrB,IAAIF,EAAKZ,EAAKM,MACdM,EAAGmC,UAAYjC,EACfF,EAAGiD,kBAAmB,EACtB7D,EAAKe,SAASH,IA5DHZ,wEAkEV,IAAA8D,EAAA5D,KAEC6D,EACFC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,gBAAgBC,MAAO,CAACC,MAAO,UACvCN,EAAAC,EAAAC,cAACC,EAAA,EAAQI,MAAT,CAAeC,GAAG,MAAlB,6JACAR,EAAAC,EAAAC,cAACC,EAAA,EAAQM,QAAT,wYAC8ET,EAAAC,EAAAC,cAAA,4KAD9E,m+BAKIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAACK,SAAU,QAASC,MAAO,YAArC,wvDAUZ,OACIX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACXZ,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,uBACXZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKC,IAAMF,UAAU,aAC1BZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YAAf,0IAAmDZ,EAAAC,EAAAC,cAAA,WAAnD,yEAQZF,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAACU,OAAQ,MAClBf,EAAAC,EAAAC,cAAA,OAAKU,UAAU,2BACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,8CACfZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oDACXZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKG,IAAMJ,UAAU,aAC1BZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cAAf,iJACAZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBAAf,qTACgBZ,EAAAC,EAAAC,cAAA,WADhB,ihEASAF,EAAAC,EAAAC,cAAA,QAAME,GAAG,YACLJ,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,2DAAsBF,EAAAC,EAAAC,cAAA,WACxDF,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OAAOmB,MAAO,CAACU,OAAQ,KAAMX,GAAG,WAAWhC,KAAK,WACrD6C,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,aACtCkE,UAAW,eAAiB1E,KAAKgB,QAAQ,YACzCgE,UAAQ,EAACC,aAAa,QAAOnB,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,mCAAkBF,EAAAC,EAAAC,cAAA,WACpDF,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OAAOmB,MAAO,CAACU,OAAQ,KAAMX,GAAG,OAAOhC,KAAK,OACjD6C,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,SACtCkE,UAAW,eAAiB1E,KAAKgB,QAAQ,QAASgE,UAAQ,EAC1DC,aAAa,QAAOnB,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAAA,iEAAuBF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OAAOmB,MAAO,CAACU,OAAQ,KAAMX,GAAG,aAAahC,KAAK,aACvD6C,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,eACtCkE,UAAU,eAAeO,aAAa,QAAOnB,EAAAC,EAAAC,cAAA,WAEpDF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,0FAA4BF,EAAAC,EAAAC,cAAA,WAC9DF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWf,MAAO,CAACC,MAAO,QAASe,QAASnF,KAAK0D,iBACtC1C,SAAUhB,KAAKI,MAAMuD,mBAAmBG,EAAAC,EAAAC,cAAA,WAEnDF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,UAAUP,MAAO,CAACiB,aAAc,SAAhD,KAAiEtB,EAAAC,EAAAC,cAAA,8EACpDF,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OAAOmB,MAAO,CAACU,OAAQ,KAAMX,GAAG,OAAOhC,KAAK,OACjD6C,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,WACtCkE,UAAW,eAAiB1E,KAAKgB,QAAQ,UAAWgE,UAAQ,EAACK,aAAa,MAC1EC,YAAY,6BAA4BxB,EAAAC,EAAAC,cAAA,WAC/CF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,uEAAwBF,EAAAC,EAAAC,cAAA,WAC1DF,EAAAC,EAAAC,cAAA,UAAQE,GAAG,UAAUQ,UAAW,eAAiB1E,KAAKgB,QAAQ,WACtD+D,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,YAAYwE,UAAQ,EAACO,aAAa,GACxEpB,MAAO,CAACqB,OAAQ,YACpB1B,EAAAC,EAAAC,cAAA,UAAQyB,UAAQ,EAAC7E,MAAM,IAAvB,4JACCZ,KAAKH,MAAM6F,UAAUC,IAAI,SAACC,GACvB,OAAQ9B,EAAAC,EAAAC,cAAA,UAAQpD,MAAOgF,GAAMA,MAE5B9B,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,4GAA+BF,EAAAC,EAAAC,cAAA,WACjEF,EAAAC,EAAAC,cAAA,UAAQE,GAAG,OAAOhC,KAAK,OAAOiC,MAAO,CAACU,OAAQ,IAAKW,OAAQ,WACnDd,UAAW,eAAiB1E,KAAKgB,QAAQ,QACzC+D,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,SAASwE,UAAQ,GAC3DlB,EAAAC,EAAAC,cAAA,UAAQyB,UAAQ,GAAhB,8CACA3B,EAAAC,EAAAC,cAAA,UAAQ6B,UAAQ,EAACjF,MAAM,sEAAvB,sEAGAkD,EAAAC,EAAAC,cAAA,UAAQpD,MAAM,4EAAd,4EAGAkD,EAAAC,EAAAC,cAAA,UAAQpD,MAAM,sEAAd,uEAGKkD,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,QAAMU,UAAU,WAAhB,KAAkCZ,EAAAC,EAAAC,cAAA,yCAAmBF,EAAAC,EAAAC,cAAA,WACrDF,EAAAC,EAAAC,cAAA,UAAQG,MAAO,CAACU,OAAQ,IAAKW,OAAQ,WAAYtB,GAAG,SAC5Ca,SAAU,SAACvE,GAAD,OAAOoD,EAAKrD,aAAaC,EAAG,WAAW0B,KAAK,SACtDwC,UAAW,eAAiB1E,KAAKgB,QAAQ,UAAWgE,UAAQ,GAChElB,EAAAC,EAAAC,cAAA,UAAQyB,UAAQ,EAACI,UAAQ,GAAzB,6EACoB,sEAAnB7F,KAAKI,MAAME,MAAyBrB,OAAA6G,EAAA,EAAA7G,CAAIT,MAAM,GAAGuH,QAAQJ,IAAI,SAAC5E,GAC3D,OAAO+C,EAAAC,EAAAC,cAAA,UAAQpD,MAAOG,EAAI,GAAIA,EAAI,KAElB,4EAAnBf,KAAKI,MAAME,MAA0BrB,OAAA6G,EAAA,EAAA7G,CAAIT,MAAM,GAAGuH,QAAQJ,IAAI,SAAC5E,GAC5D,OAAO+C,EAAAC,EAAAC,cAAA,UAAQpD,MAAOG,EAAI,GAAIA,EAAI,KAElB,sEAAnBf,KAAKI,MAAME,MAAyBrB,OAAA6G,EAAA,EAAA7G,CAAIT,MAAM,GAAGuH,QAAQJ,IAAI,SAAC5E,GAC3D,OAAO+C,EAAAC,EAAAC,cAAA,UAAQpD,MAAOG,EAAI,GAAIA,EAAI,MAEjC+C,EAAAC,EAAAC,cAAA,WAETF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAgBC,QAAS,CAAC,SAAUC,UAAU,MAC9BC,QAAStC,GACrBC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WAAWP,MAAO,CAACM,MAAO,UACrCX,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WAAWkB,GAAG,aACnBa,SAAU,kBAAMnB,EAAK/C,SAAS,CAACsC,eAAgBS,EAAKxD,MAAM+C,mBACjEW,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,cAAf,qPAIRtC,EAAAC,EAAAC,cAAA,UAAQhB,KAAK,SAASqD,QAASrG,KAAKiB,SAC5ByD,UAAU,qCACV9D,MAAM,sEAFd,wEAORkD,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,wDAxMAC,aAqNpBC,2BAAW5G,GC1NpB6G,cACF,SAAAA,EAAY5G,GAAO,IAAAC,EAAA,OAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAyG,IACf3G,EAAAb,OAAAgB,EAAA,EAAAhB,CAAAe,KAAAf,OAAAiB,EAAA,EAAAjB,CAAAwH,GAAArH,KAAAY,KAAMH,KACDO,MAAQ,GAFEN,mFAKC,IAAA8D,EAAA5D,KAChB0G,QAAQC,IAAI,WACZC,YAAS,wBAAyB,IAAItD,KAAK,SAACuD,GACxCH,QAAQC,IAAIE,GACZjD,EAAK/C,SAAS,CAAC6E,UAAWmB,EAAcC,0CAK5C,OAAQhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACH/G,KAAKI,MAAMsF,WAAa5B,EAAAC,EAAAC,cAACgD,EAAD,CAAsBtB,UAAW1F,KAAKI,MAAMsF,oBAhBzCa,aAqBzBE","file":"static/js/7.393a886a.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport lock from '../../../img/lock.png';\nimport logo from '../../../img/gerb.png';\nimport DateInput from \"../../DateInput\";\nimport {fetchSendWithoutRes} from \"../../../services/fetchService\";\nimport {withRouter} from \"react-router\";\nimport '../../../style/checkbox.css'\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\n\nclass UserRegistrationPage extends Component {\n    reqFields = ['LastName', 'Name', 'SpbuId', 'Birthdate', 'Faculty', 'Type', 'Course'];\n    constructor(props) {\n        super(props);\n        this.state = {isDateValid: false, Type: \"Бакалавриат\"};\n\n        this.handleChange = (e, field) => {\n            let st = this.state;\n            st[field] = e.target.value;\n            st[field + 'Invalid'] = false;\n            this.setState(st)\n        };\n\n        this.checkValidity = (x) => {\n            if (!this.state[x]) {\n                return false\n            }\n            return true\n        };\n\n        this.isValid = (x) => {\n            if (!this.state[x + 'Invalid']) return '';\n            else return ' is-invalid'\n        };\n\n        this.register = (e) => {\n            e.preventDefault();\n\n            let valid = true;\n            let st = {};\n\n            for (let field of this.reqFields) {\n                let fieldValid = this.checkValidity(field);\n                st[field + 'Invalid'] = !fieldValid;\n                valid = valid && fieldValid\n            }\n            this.setState(st);\n            if (!valid) return;\n\n            let user = {};\n            user.lastname = this.state.LastName;\n            user.name = this.state.Name;\n            user.patronymic = this.state.Patronymic;\n            user.spbuId = this.state.SpbuId;\n            user.birthdate = makeDate(this.state.Birthdate);\n            user.faculty = this.state.Faculty;\n            user.type = this.state.Type;\n            user.course = this.state.Course;\n\n            if (this.state.AccessAllowed)\n                user.settings = {AccessAllowed: true};\n\n            fetchSendWithoutRes('/api/registerUser', user).then((result) => {\n                if (result) this.props.history.push('/');\n            })\n\n        };\n\n        this.handleDateChange = (value) => {\n            let st = this.state;\n            st.Birthdate = value;\n            st.BirthdateInvalid = false;\n            this.setState(st)\n        }\n\n    };\n\n\n    render() {\n\n        const allowAccessPopover = (\n            <Popover id=\"popover-basic\" style={{width: \"40rem\"}}>\n                <Popover.Title as=\"h3\">Согласие на открытие доступа</Popover.Title>\n                <Popover.Content>\n                    Ставя эту галочку, вы разрешаете участникам конкурса с вашего факультета, <b>также поставившим эту\n                    галочку</b>,\n                    просматривать ваши достижения в рейтинге на ПГАС. Такая возможность предоставляется в целях\n                    повышения открытости процесса и формирования доверия между всеми участниками назначения ПГАС.\n                    <br/>\n                    <i style={{fontSize: \"small\", color: \"#5d5d5d\"}}>Таким образом, ставя данную галочку, вы\n                        дополнительно даете согласие на публикацию информации,\n                        относящейся к вашим персональным данным в соответствии со статьей 9 Федерального закона\n                        от 27.07.2006 №152-ФЗ «О персональных данных», в целях повышения открытости процесса назначения\n                        ПГАС. Отзыв данного согласия\n                        возможен путем изменения настроек в профиле.</i>\n                </Popover.Content>\n            </Popover>\n        );\n\n        return (\n            <div className=\"container-fluid\">\n                <header>\n                    <div className=\"row page_top\">\n                        <div className=\"col-12 block_header\">\n                            <img src={logo} className=\"logo_img\"/>\n                            <div className=\"p_header\">Студенческий совет СПбГУ <br/>\n                                Регистрация\n                            </div>\n\n                        </div>\n                    </div>\n\n                </header>\n                <main style={{margin: \"0\"}}>\n                    <div className=\"row register_background\">\n                        <div className=\"col-xl-4 col-lg-3 col-md-2 col-sm-2 col-1\"></div>\n                        <div className=\"col-xl-4 col-lg-6 col-md-8 col-sm-8 col-10 login\">\n                            <img src={lock} className=\"pic_lock\"/>\n                            <div className=\"title_text\">Регистрация в системе ПГАС</div>\n                            <div className=\"header_logo_text\">Для использования системы необходимо пройти\n                                регистрацию.<br/>\n                                Запрашиваемые данные необходимы для формирования анкеты. Регистрируясь, вы разрешаете\n                                СПбГУ и Студенческому совету СПбГУ обработку, в том числе автоматизированную, указанной вами в настоящей форме\n                                информации,\n                                относящейся к вашим персональным данным в соответствии со статьей 9 Федерального закона\n                                от 27.07.2006 №152-ФЗ «О персональных данных», а также передачу членам комиссий по\n                                проверке заявлений-анкет.\n                            </div>\n                            <form id='register'>\n                                <span className=\"redText\">*</span><label>Фамилия</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='lastname' name='lastname'\n                                       onChange={(e) => this.handleChange(e, 'LastName')}\n                                       className={\"form-control\" + this.isValid('LastName')}\n                                       required autocomplete=\"off\"/><br/>\n                                <span className=\"redText\">*</span><label>Имя</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='name' name='name'\n                                       onChange={(e) => this.handleChange(e, 'Name')}\n                                       className={\"form-control\" + this.isValid('Name')} required\n                                       autocomplete=\"off\"/><br/>\n                                <label>Отчество</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='patronymic' name='patronymic'\n                                       onChange={(e) => this.handleChange(e, 'Patronymic')}\n                                       className=\"form-control\" autocomplete=\"off\"/><br/>\n\n                                <span className=\"redText\">*</span><label>Дата рождения</label><br/>\n                                <DateInput style={{width: \"100%\"}} updater={this.handleDateChange}\n                                           isValid={!this.state.BirthdateInvalid}/><br/>\n\n                                <span className=\"redText\" style={{\"margin-top\": \"2rem\"}}>*</span><label>Почта\n                                СПбГУ</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='name' name='name'\n                                       onChange={(e) => this.handleChange(e, 'SpbuId')}\n                                       className={\"form-control\" + this.isValid('SpbuId')} required autoComplete=\"off\"\n                                       placeholder=\"st******@student.spbu.ru\"/><br/>\n                                <span className=\"redText\">*</span><label>Факультет</label><br/>\n                                <select id=\"faculty\" className={\"form-control\" + this.isValid('Faculty')}\n                                        onChange={(e) => this.handleChange(e, 'Faculty')} required defaultValue=\"\"\n                                        style={{cursor: \"pointer\"}}>\n                                    <option disabled value=\"\">Выберите факультет/институт</option>\n                                    {this.props.faculties.map((fac) => {\n                                        return (<option value={fac}>{fac}</option>)\n                                    })}\n                                </select><br/>\n                                <span className=\"redText\">*</span><label>Ступень обучения</label><br/>\n                                <select id=\"type\" name=\"type\" style={{margin: \"0\", cursor: \"pointer\"}}\n                                        className={\"form-control\" + this.isValid('Type')}\n                                        onChange={(e) => this.handleChange(e, 'Type')} required>\n                                    <option disabled>Ступень</option>\n                                    <option selected value=\"Бакалавриат\">\n                                        Бакалавриат\n                                    </option>\n                                    <option value=\"Магистратура\">\n                                        Магистратура\n                                    </option>\n                                    <option value=\"Специалитет\">\n                                        Специалитет\n                                    </option>\n                                </select><br/>\n                                <span className=\"redText\">*</span><label>Курс</label><br/>\n                                <select style={{margin: \"0\", cursor: \"pointer\"}} id='course'\n                                        onChange={(e) => this.handleChange(e, 'Course')} name='course'\n                                        className={\"form-control\" + this.isValid('Course')} required>\n                                    <option disabled selected>Выберите курс</option>\n                                    {this.state.Type == 'Бакалавриат' && [...Array(4).keys()].map((x) => {\n                                        return <option value={x + 1}>{x + 1}</option>\n                                    })}\n                                    {this.state.Type == 'Магистратура' && [...Array(2).keys()].map((x) => {\n                                        return <option value={x + 1}>{x + 1}</option>\n                                    })}\n                                    {this.state.Type == 'Специалитет' && [...Array(6).keys()].map((x) => {\n                                        return <option value={x + 1}>{x + 1}</option>\n                                    })}\n                                </select><br/>\n\n                                <OverlayTrigger trigger={['hover']} placement=\"top\"\n                                                overlay={allowAccessPopover}>\n                                    <div className=\"checkbox\" style={{color: \"green\"}}>\n                                        <input type=\"checkbox\" id=\"checkbox_1\"\n                                               onChange={() => this.setState({AccessAllowed: !this.state.AccessAllowed})}/>\n                                        <label htmlFor=\"checkbox_1\">Открыть участникам доступ к моим достижениям</label>\n                                    </div>\n                                </OverlayTrigger>\n\n                                <button type=\"button\" onClick={this.register}\n                                        className=\"btn btn-primary btn-md button_send\"\n                                        value=\"регистрация\">\n                                    Регистрация\n                                </button>\n                            </form>\n                        </div>\n                        <div class=\"col-xl-4 col-lg-3 col-md-2 col-sm-2 col-1\"></div>\n                    </div>\n                </main>\n            </div>)\n    }\n}\n\nfunction makeDate(d) {\n    if (!d) return undefined;\n    let date = d.split('.');\n    return new Date(date[2] + '-' + date[1] + '-' + date[0])\n}\n\nexport default withRouter(UserRegistrationPage)","import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport UserRegistrationPage from \"../../views/user/userRegistrationPage\";\nimport {fetchGet} from \"../../../services/fetchService\";\n\nclass UserRegistrationContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    };\n\n    componentDidMount() {\n        console.log('MOUNTED');\n        fetchGet('/api/getFacultiesList', {}).then((facultiesList) => {\n            console.log(facultiesList);\n            this.setState({faculties: facultiesList.list})\n        })\n    }\n\n    render() {\n        return (<>\n            {this.state.faculties && <UserRegistrationPage faculties={this.state.faculties}/>}\n        </>)\n    }\n}\n\nexport default UserRegistrationContainer"],"sourceRoot":""}