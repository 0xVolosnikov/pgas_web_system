{"version":3,"sources":["components/views/staff/staffStatistics.js"],"names":["originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","this","arguments","chart","legendHeight","legend","height","width","ctx","fontSize","toFixed","font","textBaseline","sum","i","config","data","datasets","length","text","textX","Math","round","measureText","textY","fillText","StaffStatistics","props","_this","Object","_home_pgas_pgas_web_system_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_pgas_pgas_web_system_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_pgas_pgas_web_system_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","statisticsProm","fetchGet","faculty","staffContextStore","usersProm","Info","statistics","users","setState","summaryBalls","radarData","radarCounts","coursesCounts","crits","criterias","usersMatrix","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","user","value","userRow","Type","Course","keys","push","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Achievements","ach","status","index","indexOf","chars","ball","err","return","_i","_Object$keys","course","vectors","PCA","getEigenVectors","first","computePercentageExplained","second","console","log","adData","computeAdjustedData","critsData","critsBallsData","medBallsCritsData","reducedMatrix","PCAdata","radarDataForVisualize","lineDataForVisualize","coursesCountsDataForVisualize","coursesCountsPerStudentDataForVisualize","makeUsersMatrix","makePCA","PCAdataset","AGNESdataset","labels","adjustedData","x","y","label","backgroundColor","colors","values","_i4","_Object$keys2","countsPerStudent","radLabel","borderColor","fill","_i5","_Object$keys3","RINC","SCOPUS","VAK","Unindexed","hoverBackgroundColor","CritsCounts","critsDataset","critBallssDataset","CritsBalls","medBallsCritsDataset","barChartOptions","display","plugins","render","fontColor","layout","padding","left","right","top","bottom","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","id","className","style","justify-content","justifyContent","marginBottom","react_chartjs_2__WEBPACK_IMPORTED_MODULE_12__","options","showLegend","position","outsidePadding","textMargin","tooltips","callbacks","tooltipItem","marginTop","Component","observer"],"mappings":"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","file":"static/js/16.46b28eba.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport {observer} from \"mobx-react\";\nimport staffContextStore from \"../../../stores/staff/staffContextStore\";\nimport {fetchGet} from \"../../../services/fetchService\";\nimport {Doughnut, Bar, Chart, Scatter, Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\nimport PCA from \"pca-js\"\nimport { agnes } from 'ml-hclust';\n\nlet originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\nChart.helpers.extend(Chart.controllers.doughnut.prototype, {\n    draw: function() {\n        originalDoughnutDraw.apply(this, arguments);\n\n        let chart = this.chart;\n        let legendHeight = chart.legend.height\n        let width = chart.chart.width,\n            height = chart.chart.height,\n            ctx = chart.chart.ctx;\n\n\n        let fontSize = (height / 270).toFixed(2);\n        ctx.font = fontSize + \"em sans-serif\";\n        ctx.textBaseline = \"middle\";\n\n        let sum = 0;\n        for (let i = 0; i < chart.config.data.datasets[0].data.length; i++) {\n            sum += chart.config.data.datasets[0].data[i];\n\n        }\n\n        let text = 'Всего: ' + sum,\n            textX = Math.round((width - ctx.measureText(text).width) / 2),\n            textY = (legendHeight + height) / 2;\n\n        ctx.fillText(text, textX, textY);\n    }\n});\n\nclass StaffStatistics extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    };\n\n    async componentDidMount() {\n        let statisticsProm = fetchGet('/api/getStatistics', {faculty: staffContextStore.faculty})\n\n        let usersProm = fetchGet('/api/checked', {faculty: staffContextStore.faculty})\n\n        this.setState({statistics: await statisticsProm, users: (await usersProm).Info})\n    }\n\n    makeUsersMatrix(users, summaryBalls, radarData, radarCounts, coursesCounts) {\n        let crits = staffContextStore.criterias\n        let usersMatrix = []\n        for (let user of users)\n        {\n            summaryBalls[user.user] = 0\n            let userRow = []\n\n            if (!coursesCounts[user.Type[0] + user.Course]) coursesCounts[user.Type[0] + user.Course] = 0\n            coursesCounts[user.Type[0] + user.Course] += 1\n\n            if (!radarData[user.Type + user.Course]) {\n                radarData[user.Type + user.Course] = []\n                radarCounts[user.Type + user.Course] = []\n            for (let i = 0; i < Object.keys(crits).length; i++) {\n                radarData[user.Type + user.Course].push(0)\n                radarCounts[user.Type + user.Course].push(0)\n            }\n            }\n\n            for (let i = 0; i < Object.keys(crits).length; i++)\n                userRow.push(0)\n\n            for (let ach of user.Achievements)\n            {\n                if (ach.status != 'Принято' && ach.status != 'Принято с изменениями') continue\n                let index = Object.keys(crits).indexOf(ach.chars[0])\n                userRow[index] += ach.ball\n                radarData[user.Type + user.Course][index] += ach.ball\n                radarCounts[user.Type + user.Course][index] += 1\n                summaryBalls[user.user] += ach.ball\n            }\n\n            usersMatrix.push(userRow)\n        }\n\n        for (let course of Object.keys(radarData))\n        {\n            for (let i = 0; i < radarData[course].length; i++)\n            {\n                if (radarCounts[course][i] > 0 )\n                    radarData[course][i] = radarData[course][i] / radarCounts[course][i]\n            }\n        }\n\n        return usersMatrix\n    }\n\n    makePCA(usersMatrix) {\n        let vectors = PCA.getEigenVectors(usersMatrix)\n        let first = PCA.computePercentageExplained(vectors,vectors[0])\n        let second = PCA.computePercentageExplained(vectors,vectors[1])\n        console.log('EXPL', first, second)\n        let adData = PCA.computeAdjustedData(usersMatrix,vectors[0], vectors[1])\n        console.log('DATA', adData)\n        return adData\n    }\n\n    render() {\n        let data, critsData, critsBallsData, medBallsCritsData, reducedMatrix, PCAdata, radarDataForVisualize, radarData = {}, radarCounts= {}\n        let lineDataForVisualize, coursesCounts = {}, coursesCountsDataForVisualize = {}, coursesCountsPerStudentDataForVisualize = {}\n        let summaryBalls = {}\n        if (this.state.users && staffContextStore.criterias)\n        {\n            let usersMatrix = this.makeUsersMatrix(this.state.users, summaryBalls, radarData, radarCounts, coursesCounts)\n            reducedMatrix = this.makePCA(usersMatrix)\n\n            let PCAdataset = []\n            let AGNESdataset = []\n            let labels = []\n            for (let i = 0; i < reducedMatrix.adjustedData[0].length; i++)\n            {\n                PCAdataset.push({x: reducedMatrix.adjustedData[0][i], y:reducedMatrix.adjustedData[1][i] })\n                AGNESdataset.push([reducedMatrix.adjustedData[0][i], reducedMatrix.adjustedData[1][i]])\n                labels.push(this.state.users[i].user)\n            }\n\n            PCAdata = {\n                labels: labels,\n                datasets: [{\n                    label: 'Scatter Dataset',\n                    backgroundColor: '#ff0000',\n                    data: PCAdataset\n                }]\n            }\n\n            radarDataForVisualize = {\n                labels: Object.keys(staffContextStore.criterias),\n                datasets: []\n            }\n            lineDataForVisualize = {\n                labels: Object.keys(staffContextStore.criterias),\n                datasets: []\n            }\n\n            let colors = ['rgba(102,233,125,0.76)', 'rgba(0,0,255,0.75)', 'rgba(255,252,7,0.75)', 'rgba(255,167,0,0.75)',\n                'rgba(147,0,165,0.75)', 'rgba(255,0,2,0.75)']\n            coursesCountsDataForVisualize = {\n                labels: Object.keys(coursesCounts),\n                datasets: [{\n                    data: Object.values(coursesCounts),\n                    backgroundColor:colors\n                }]\n            }\n\n            coursesCountsPerStudentDataForVisualize = {\n                labels: Object.keys(staffContextStore.criterias),\n                datasets: []\n            }\n\n            for (let course of Object.keys(coursesCounts)) {\n                let countsPerStudent = []\n\n                console.log(Object.keys(radarCounts), course[-1])\n                let radLabel = ''\n                if (course[0] == 'Б') radLabel = 'Бакалавриат'\n                if (course[0] == 'М') radLabel = 'Магистратура'\n                if (course[0] == 'С') radLabel = 'Специалитет'\n                radLabel += course[course.length - 1]\n\n                for (let i = 0; i < radarCounts[radLabel].length; i++) {\n                    countsPerStudent.push(0)\n                    if (coursesCounts[course] > 0)\n                        countsPerStudent[i] = radarCounts[radLabel][i] / coursesCounts[course]\n                }\n                coursesCountsPerStudentDataForVisualize.datasets.push(\n                    {\n                        label: course,\n                        data: countsPerStudent,\n                        backgroundColor: colors[Object.keys(radarData).indexOf(radLabel)],\n                        borderColor: colors[Object.keys(radarData).indexOf(radLabel)],\n                        fill: false\n                    })\n            }\n\n            for (let course of Object.keys(radarData))\n            {\n\n                radarDataForVisualize.datasets.push(\n                    {\n                        label: course,\n                        data: radarData[course],\n                        backgroundColor: colors[Object.keys(radarData).indexOf(course)],\n                        borderColor: colors[Object.keys(radarData).indexOf(course)],\n                        fill: false\n                    }\n                )\n\n                lineDataForVisualize.datasets.push(\n                    {\n                        label: course,\n                        data: radarCounts[course],\n                        backgroundColor: colors[Object.keys(radarData).indexOf(course)],\n                        borderColor: colors[Object.keys(radarData).indexOf(course)],\n                        fill: false\n                    }\n                )\n\n            }\n        }\n        if (this.state.statistics) {\n            data = {\n                labels: [\n                    'РИНЦ',\n                    'SCOPUS',\n                    'ВАК',\n                    'Неиндекс.'\n                ],\n                datasets: [{\n                    data: [this.state.statistics.RINC, this.state.statistics.SCOPUS, this.state.statistics.VAK, this.state.statistics.Unindexed],\n                    backgroundColor: [\n                        '#FF6384',\n                        '#36A2EB',\n                        '#FFCE56'\n                    ],\n                    hoverBackgroundColor: [\n                        '#FF6384',\n                        '#36A2EB',\n                        '#FFCE56'\n                    ]\n                }]\n            };\n            console.log('KEYS', Object.keys(this.state.statistics.CritsCounts))\n            let crits = staffContextStore.criterias\n            let critsDataset = {}\n            if (crits) {\n                for (let i = 0; i < Object.keys(crits).length; i++)\n                    critsDataset[Object.keys(crits)[i]] = this.state.statistics.CritsCounts[Object.keys(crits)[i]]\n                for (let i = 0; i < Object.keys(crits).length; i++)\n                    if (!critsDataset[Object.keys(crits)[i]]) critsDataset[Object.keys(crits)[i]] = 0\n            }\n            if (crits)\n            critsData = {\n                labels: Object.keys(crits),\n                datasets: [{\n                    data: Object.values(critsDataset),\n                    label: '',\n                    backgroundColor: [\n                        '#6366ff',\n                        '#6366ff',\n                        '#6366ff',\n                        '#4cab59',\n                        '#4cab59',\n                        '#ff464a',\n                        '#ff464a',\n                        '#9300a5',\n                        '#9300a5',\n                        '#9300a5',\n                        '#FFCE56',\n                        '#FFCE56',\n                        '#FFCE56'\n                    ]\n                }]\n            };\n\n            let critBallssDataset = {}\n            if (crits) {\n                for (let i = 0; i < Object.keys(crits).length; i++)\n                    critBallssDataset[Object.keys(crits)[i]] = this.state.statistics.CritsBalls[Object.keys(crits)[i]]\n                for (let i = 0; i < Object.keys(crits).length; i++) {\n                    if (!critBallssDataset[Object.keys(crits)[i]]) critBallssDataset[Object.keys(crits)[i]] = 0\n                    //critBallssDataset[Object.keys(crits)[i]] = critBallssDataset[Object.keys(crits)[i]].toFixed(2)\n                }\n            }\n            if (crits)\n            critsBallsData = {\n                labels: Object.keys(critBallssDataset),\n                datasets: [{\n                    data: Object.values(critBallssDataset),\n                    backgroundColor: [\n                        '#6366ff',\n                        '#6366ff',\n                        '#6366ff',\n                        '#4cab59',\n                        '#4cab59',\n                        '#ff464a',\n                        '#ff464a',\n                        '#9300a5',\n                        '#9300a5',\n                        '#9300a5',\n                        '#FFCE56',\n                        '#FFCE56',\n                        '#FFCE56'\n                    ]\n                }]\n            };\n            let medBallsCritsDataset = {}\n            if (crits) {\n\n                for (let i = 0; i < Object.keys(crits).length; i++)\n                    if (critsDataset[Object.keys(crits)[i]] > 0)\n                        medBallsCritsDataset[Object.keys(crits)[i]] = (critBallssDataset[Object.keys(crits)[i]] / critsDataset[Object.keys(crits)[i]]).toFixed(2)\n                    else medBallsCritsDataset[Object.keys(crits)[i]] = 0\n\n                medBallsCritsData = {\n                    labels: Object.keys(medBallsCritsDataset),\n                    datasets: [{\n                        data: Object.values(medBallsCritsDataset),\n                        backgroundColor: [\n                            '#6366ff',\n                            '#6366ff',\n                            '#6366ff',\n                            '#4cab59',\n                            '#4cab59',\n                            '#ff464a',\n                            '#ff464a',\n                            '#9300a5',\n                            '#9300a5',\n                            '#9300a5',\n                            '#FFCE56',\n                            '#FFCE56',\n                            '#FFCE56'\n                        ]\n                    }]\n                };\n            }\n\n        }\n\n\n\n        let barChartOptions = {\n            legend: {\n                display: false\n            },\n            plugins: {\n                labels: [\n                    {\n                        render: 'value',\n                        fontColor: '#000000'\n                    }\n                ]\n            }\n        ,\n            layout: {\n                padding: {\n                    left: 0,\n                        right: 0,\n                        top: 20,\n                        bottom: 0\n                }\n            }}\n\n        return (\n            <main>\n                <div id=\"panel\" className=\"row justify_center\">\n                    <div className=\"col-9 general\">\n                        <div className=\"profile\" style={{\"display\": \"flex\", \"justify-content\": \"space-between\"}}>\n                            <div className=\"centered_ver\">\n                                <p className=\"headline\">\n                                    Статистика {staffContextStore.faculty}\n                                </p>\n                            </div>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <div style={{width: \"500px\", marginBottom: \"30px\"}}>\n                            <h3 style={{marginBottom: '10px'}}>Публикации (в т.ч. тезисы)</h3>\n                            {this.state.statistics &&  <Doughnut data={data} options={{\n                                legend: {\n                                  showLegend: false\n                                },\n                                plugins: {\n                                    labels: [\n                                        {\n                                            render: 'label',\n                                            position: 'outside',\n                                            fontColor: '#000000',\n                                            outsidePadding: 6,\n                                            textMargin: 10\n                                        },\n                                        {\n                                            render: 'value',\n                                            fontColor: '#000000'\n                                        }\n                                    ]\n                                }\n                            }}/>}\n                        </div>\n                        <div style={{width: \"500px\"}}>\n                            <h3>Достижений по критериям: </h3>\n                            {(this.state.statistics && staffContextStore.criterias) &&  <Bar data={critsData}\n                                                                                             height={170}\n                                                                                             options={barChartOptions}/>}\n                        </div>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <div style={{width: \"500px\"}}>\n                            <h3>Баллов по критериям: </h3>\n                            {(this.state.statistics && staffContextStore.criterias) &&  <Bar data={critsBallsData} options={barChartOptions}/>}\n                        </div>\n                            <div style={{width: \"500px\"}}>\n                                <h3>Средний балл за достижение: </h3>\n                                {(this.state.statistics && staffContextStore.criterias) &&  <Bar data={medBallsCritsData} options={barChartOptions}/>}\n                            </div>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <div style={{width: \"500px\"}}>\n                            <h3>Результат PCA: </h3>\n                            {(this.state.statistics && staffContextStore.criterias) &&  <Scatter data={PCAdata} options = {{\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                callbacks: {\n                                label: function(tooltipItem, data) {\n                                let label = data.labels[tooltipItem.index];\n                                return label + ': ' + summaryBalls[label];\n                            }\n                            }}\n                            }}/>}\n                        </div>\n\n                            <div style={{width: \"500px\", marginBottom: \"30px\"}}>\n                                <h3 style={{marginBottom: '10px'}}>Кол-во подающих по курсам</h3>\n                                {this.state.statistics &&  <Doughnut data={coursesCountsDataForVisualize} options={{\n                                    legend: {\n                                        showLegend: false\n                                    },\n                                    plugins: {\n                                        labels: [\n                                            {\n                                                render: 'label',\n                                                position: 'outside',\n                                                fontColor: '#000000',\n                                                outsidePadding: 6,\n                                                textMargin: 10\n                                            },\n                                            {\n                                                render: 'value',\n                                                fontColor: '#000000'\n                                            }\n                                        ]\n                                    }\n                                }}/>}\n                            </div>\n\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"center\", marginTop: '30px'}}>\n                        <div style={{width: \"1000px\"}}>\n                            <h3>Средние баллы по курсам: </h3>\n                            {(this.state.statistics && staffContextStore.criterias) &&  <Line data={radarDataForVisualize} />}\n                        </div>\n                        </div>\n\n                        <div style={{display: \"flex\", justifyContent: \"center\", marginTop: '30px'}}>\n                            <div style={{width: \"1000px\"}}>\n                                <h3>Кол-во достижений по курсам: </h3>\n                                {(this.state.statistics && staffContextStore.criterias) &&  <Line data={lineDataForVisualize} />}\n                            </div>\n                        </div>\n\n                        <div style={{display: \"flex\", justifyContent: \"center\", marginTop: '30px'}}>\n                            <div style={{width: \"1000px\"}}>\n                                <h3>Кол-во достижений на человека по курсам: </h3>\n                                {(this.state.statistics && staffContextStore.criterias) &&  <Line data={coursesCountsPerStudentDataForVisualize} />}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>)\n    }\n}\n\nexport default observer(StaffStatistics)"],"sourceRoot":""}