{"version":3,"sources":["components/views/user/userEditProfilePage.js","components/containers/user/UserEditProfileContainer.js"],"names":["UserEditProfilePage","props","_this","d","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isDateValid","dateValidationResult","Type","LastName","personal","Name","FirstName","Patronymic","SpbuId","Birthdate","Date","getDate","getMonth","getFullYear","Faculty","Course","handleChange","e","field","st","target","value","setState","register","user","lastname","name","patronymic","spbuId","birthdate","date","split","makeDate","faculty","type","course","fetchSendWithoutRes","then","result","history","push","handleDateChange","_this2","react_default","a","createElement","className","src","logo","style","margin","lock","id","onChange","required","autocomplete","oninput","DateInput","width","defaultValue","updater","isValid","margin-top","autoComplete","placeholder","disabled","faculties","map","fac","selected","display","justifyContent","onClick","goBack","class","Component","withRouter","UserEditProfileContainer","console","log","fetchGet","facultiesList","list","Fragment","userPersonalStore","userEditProfilePage"],"mappings":"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","file":"static/js/14.1dedadf5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport lock from '../../../img/lock.png';\nimport logo from '../../../img/gerb.png';\nimport DateInput from \"../../DateInput\";\nimport {fetchSendWithoutRes} from \"../../../services/fetchService\";\nimport {withRouter} from \"react-router\";\n\nclass UserEditProfilePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isDateValid: false, dateValidationResult: true, Type: \"Бакалавриат\"};\n        this.state.LastName = props.personal.LastName;\n        this.state.Name = props.personal.FirstName;\n        this.state.Patronymic = props.personal.Patronymic;\n        this.state.SpbuId = props.personal.SpbuId;\n        this.state.Birthdate = getDate(props.personal.Birthdate);\n        this.state.Faculty = props.personal.Faculty;\n        this.state.Type = props.personal.Type;\n        this.state.Course = props.personal.Course;\n\n        this.handleChange = (e, field) => {\n            let st = this.state;\n            st[field] = e.target.value;\n            this.setState(st)\n        };\n\n        this.register = (e) => {\n            let user = {};\n            user.lastname = this.state.LastName;\n            user.name = this.state.Name;\n            user.patronymic = this.state.Patronymic;\n            user.spbuId = this.state.SpbuId;\n            user.birthdate = makeDate(this.state.Birthdate);\n            user.faculty = this.state.Faculty;\n            user.type = this.state.Type;\n            user.course = this.state.Course;\n\n            fetchSendWithoutRes('/api/registerUser', user).then((result) => {\n                if (result) this.props.history.push('/');\n            })\n\n        };\n\n        this.handleDateChange = (value) => {\n            let st = this.state;\n            st.Birthdate = value;\n            this.setState(st)\n        }\n\n    };\n\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <header>\n                    <div className=\"row page_top\">\n                        <div className=\"col-12 block_header\">\n                            <img src={logo} className=\"logo_img\"/>\n                            <div className=\"p_header\">Санкт-Петербургский государственный университет <br/>\n                                Регистрация\n                            </div>\n\n                        </div>\n                    </div>\n\n                </header>\n                <main style={{margin: \"0\"}}>\n                    <div className=\"row register_background\">\n                        <div className=\"col-xl-4 col-lg-3 col-md-2 col-sm-2 col-1\"></div>\n                        <div className=\"col-xl-4 col-lg-6 col-md-8 col-sm-8 col-10 login\">\n                            <img src={lock} className=\"pic_lock\"/>\n                            <div className=\"title_text\">Изменение профиля</div>\n                            <div className=\"header_logo_text\">Для использования системы необходимо пройти\n                                регистрацию.<br/>\n                                Запрашиваемые данные необходимы для формирования анкеты. Регистрируясь вы разрешаете\n                                СПбГУ и Студсовету обрабатывать ваши персональные данные (согласно анкете на ПГАС).\n                            </div>\n                            <form id='register'>\n                                <span className=\"redText\">*</span><label>Фамилия</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='lastname' name='lastname'\n                                       value={this.state.LastName} onChange={(e) => this.handleChange(e, 'LastName')}\n                                       className=\"form-control\" required autocomplete=\"off\"/><br/>\n                                <span className=\"redText\">*</span><label>Имя</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='name' name='name' value={this.state.Name}\n                                       onChange={(e) => this.handleChange(e, 'Name')} className=\"form-control\" required\n                                       autocomplete=\"off\"/><br/>\n                                <label>Отчество</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='patronymic' name='patronymic'\n                                       value={this.state.Patronymic}\n                                       onChange={(e) => this.handleChange(e, 'Patronymic')} oninput=\"$(this).validate()\"\n                                       className=\"form-control\" autocomplete=\"off\"/><br/>\n\n                                <span className=\"redText\">*</span><label>Дата рождения</label><br/>\n                                <DateInput style={{width: \"100%\"}} defaultValue={this.state.Birthdate}\n                                           updater={this.handleDateChange}\n                                           isValid={this.state.dateValidationResult}/><br/>\n\n                                <span className=\"redText\" style={{\"margin-top\": \"2rem\"}}>*</span><label>Почта\n                                СПбГУ</label><br/>\n                                <input type='text' style={{margin: \"0\"}} id='name' name='name' value={this.state.SpbuId}\n                                       onChange={(e) => this.handleChange(e, 'SpbuId')}\n                                       className=\"form-control\" required autoComplete=\"off\"\n                                       placeholder=\"st******@student.spbu.ru\"/><br/>\n                                <span className=\"redText\">*</span><label>Факультет</label><br/>\n                                <select id=\"faculty\" className=\"form-control \" value={this.state.Faculty}\n                                        onChange={(e) => this.handleChange(e, 'Faculty')} required defaultValue=\"\">\n                                    <option disabled value=\"\">Факультет</option>\n                                    {this.props.faculties.map((fac) => {\n                                        return (<option value={fac}>{fac}</option>)\n                                    })}\n                                </select><br/>\n                                <span className=\"redText\">*</span><label>Ступень обучения</label><br/>\n                                <select id=\"type\" name=\"type\" style={{margin: \"0\"}} value={this.state.Type}\n                                        className=\"form-control \" onChange={(e) => this.handleChange(e, 'Type')}\n                                        required>\n                                    <option disabled>Ступень</option>\n                                    <option selected value=\"Бакалавриат\">\n                                        Бакалавриат\n                                    </option>\n                                    <option value=\"Магистратура\">\n                                        Магистратура\n                                    </option>\n                                    <option value=\"Специалитет\">\n                                        Специалитет\n                                    </option>\n                                </select><br/>\n                                <span className=\"redText\">*</span><label>Курс</label><br/>\n                                <input type='number' style={{margin: \"0\"}} id='course' value={this.state.Course}\n                                       onChange={(e) => this.handleChange(e, 'Course')} name='course'\n                                       className=\"form-control\" required autocomplete=\"off\"/><br/>\n\n                                <div style={{display: \"flex\", \"justifyContent\": \"space-between\"}}>\n                                    <button type=\"button\" onClick={() => this.props.history.goBack()}\n                                            className=\"btn btn-danger btn-md button_send\"\n                                            value=\"регистрация\">\n                                        Отмена\n                                    </button>\n\n                                    <button type=\"button\" onClick={this.register}\n                                            className=\"btn btn-success btn-md button_send\"\n                                            value=\"регистрация\">\n                                        Сохранить\n                                    </button>\n\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"col-xl-4 col-lg-3 col-md-2 col-sm-2 col-1\"></div>\n                    </div>\n                </main>\n            </div>)\n    }\n}\n\nfunction makeDate(d) {\n    if (!d) return undefined;\n    let date = d.split('.');\n    return new Date(date[2] + '-' + date[1] + '-' + date[0])\n}\n\nfunction getDate(d) {\n    if (!d) return undefined;\n    d = new Date(d);\n    return (d.getDate() > 9 ? d.getDate() : '0' + d.getDate()) + \".\" + ((d.getMonth() + 1) > 9 ? (d.getMonth() + 1) : '0' + (d.getMonth() + 1)) + \".\" + d.getFullYear();\n}\n\nexport default withRouter(UserEditProfilePage)","import React, {Component} from 'react';\nimport '../../../style/user_main.css';\nimport {fetchGet} from \"../../../services/fetchService\";\nimport UserEditProfilePage from \"../../views/user/userEditProfilePage\";\nimport userPersonalStore from \"../../../stores/userPersonalStore\";\n\nclass UserEditProfileContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    };\n\n    componentDidMount() {\n        console.log('MOUNTED');\n        fetchGet('/api/getFacultiesList', {}).then((facultiesList) => {\n            console.log(facultiesList);\n            this.setState({faculties: facultiesList.list})\n        })\n    }\n\n    render() {\n        return (<>\n            {(this.state.faculties && userPersonalStore.personal) &&\n            <UserEditProfilePage personal={userPersonalStore.personal} faculties={this.state.faculties}/>}\n        </>)\n    }\n}\n\nexport default UserEditProfileContainer"],"sourceRoot":""}